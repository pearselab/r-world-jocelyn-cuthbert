TRUE
}
}
is_prime(7)
is_prime2 <-function (num) {
flag = 0
if (num >1) {
flag = 1
for (i in 2:(num-1)) {
if ((num %% i) == 0) {
flag = 0
break
}
}
}
is_prime2 <-function (num) {
flag = 0
if (num >1) {
flag = 1
for (i in 2:(num-1)) {
if ((num %% i) == 0) {
flag = 0
break
}
}
}
if(num== 2)  flag = 1
if(flag ==1) {
print(paste(num, "is a prime number"))
} else {
print(paste(num,"is not a prime number"))
}
}
is_prime2(7)
is_prime <- function (num) {
if (num == 2) {
TRUE
} else if (any(num%%2:(num-1)==0)) {# see example function of a "any
FALSE
} else {
TRUE
}
}
is_prime(7)
is_prime2 <-function (num) {
flag = 0
if (num >1) {
flag = 1
for (i in 2:(num-1)) {
if ((num %% i) == 0) {
flag = 0
break
}
}
}
if(num== 2)  flag = 1
if(flag ==1) {
print(paste(num, "is a prime number"))
} else {
print(paste(num,"is not a prime number"))
}
}
is_prime2(7)
is_prime3 <-function (num) {
flag = 0
if (num >1) {
flag = 1
for (i in 2:(num-1)) {
if ((num %% i) == 0) {
flag = 0
break
}
}
}
if(num== 2)  flag = 1
if(flag ==1) {
print(paste(num,"Job:NUMBER"))
}
}
is_prime3(10)
is_prime3(7)
for (num in 1:20) {
if (num %% 5==0) {
print ("Good:NUMBER")
} else {
is_prime3
} else {
break
}
}
for (num in 1:20) {
if (num %% 5==0) {
print ("Good:NUMBER")
} else {
is_prime3(num)
} else {
break
}
}
for (num in 1:20) {
if (num %% 5==0) {
print ("Good:NUMBER")
} else {
is_prime3(num)
}
}
is_prime3 <-function (num) {
flag = 0
if (num >1) {
flag = 1
for (i in 2:(num-1)) {
if ((num %% i) == 0) {
flag = 0
break
}
}
}
if(num== 2)  flag = 1
if(flag ==1) {
print(paste(num,"Job:NUMBER"))
}
}
is_prime3(7)
for (num in 1:20) {
if (num %% 5==0) {
print ("Good:NUMBER")
} else {
is_prime3(num)
}
}
for (num in 1:20) {
if (num %% 5==0) {
print (num("Good:NUMBER"))
} else {
is_prime3(num)
}
}
for (num in 1:20) {
if (num %% 5==0) {
print ("Good:NUMBER")
} else {
is_prime3(num)
}
}
is_prime3(7)
pop_growth <-function (a, b, c, t){
a*exp((-b)*exp(-c)*t)
}
pop_growth (1, 2, 3, 4)
pop_plot <-function(t, y){
plot(t,y, xlab="Months" ylab="Population")}
pop_plot <-function(t, y){
plot(t,y, xlab="Months", ylab="Population")}
pop_growth (30, 1, 10, 4)
pop_plot (12, 4)
pop_plot <-function(t, y){
plot(t,y, xlab="Months", ylab="Population", col=ifelse(a<y, "blue", ifelse(y>b, "red", "black")))
}
a=30
b=1
c=10
t=12
pop_plot (12, 4)
pop_plot <-function(t, y){
plot(t,y, xlab="Months", ylab="Population")}
pop_plot (12, 4)
pop_plot(8,40)
pop_plot <-function(t, y){
plot(t,y, xlab="Months", ylab="Population", col=ifelse(a<y, "blue", ifelse(y>b, "red", "black")))
}
pop_plot(8,2)
pop_plot(8,65)
pop_plot(8,6)
pop_plot <-function(t, y){
plot(t,y, xlab="Months", ylab="Population", col=ifelse(y>a & y>b, "purple"))
}
pop_plot(8,65)
Draw_box <-function(X,Y){
box(which = "figure", lty= "*", dim(X,Y))
}
Draw_box(5,3)
Draw_box <-function(X,Y){
box(which = "figure", lty= "*", dim(X), dim(Y))
}
Draw_box(3,5)
Draw_box <-function(X,Y){
box(which = "figure", lty= Y, dim(X))
}
Draw_box(3,5)
Draw_box <-function(X,Y){
box(which = "figure", lty= Y, dim(X))
}
Draw_box(3,5)
pop_plot(8,65)
Draw_box(3,5)
Draw_box(6,20)
pop_plot (12, 4)
pop_plot <-function(t, y){
plot(t,y, xlab="Months", ylab="Population")}
pop_plot (12, 4)
Draw_box(3,5)
Draw_box <-function(X,Y){
box(which = "figure", lty= "dash", dim(X))
}
Draw_box(3,5)
Draw_rectangle <-function(X,Y){
rect(xleft=1, ybottom=1, xright=5, ytop=3, density=NULL, angle=90, col=NULL, border=NULL, lty=par("lty"), lwd=1,...)
}
Draw_rectangle(5,3)
Draw_rectangle
symbols(x, y = NULL, stars=(13),
inches = TRUE, add = FALSE,
fg = par("col"), bg = NA,
xlab = NULL, ylab = NULL, main = NULL,
xlim = NULL, ylim = NULL, ...)
a=30
b=1
c=10
t=12
pop_growth <-function (a, b, c, t){
a*exp((-b)*exp(-c)*t)
}
pop_growth (30, 1, 10, 4)
pop_plot <-function(t, y){
plot(t,y, xlab="Months", ylab="Population")}
pop_plot (12, 4)
Rascal <- list(length=40, weight=50, breed="Maine.Coone")
class(Rascal) <- "cat"
class(Rascal)
race <- function (first, second){
if(!inherits(first, "cat") | !inherits(second, "cat"))
stop("you haven't given me two cats!")
if(first$weight < second$weight) {
print("first cat is the fattest!")
return(first)
}
print("second can is the fattest!")
return(second)
}
Linus <- list(length=20, weight=25, breed="Stray")
class(Linus) <- "cat"
class(Linus)
class(Leo)
Leo <- list(length=20, weight=25, breed="Stray")
class(Leo) <- "cat"
class(Leo)
class(Rascal, Leo)
race(Rascal, Leo)
race <- function (first, second){
if(!inherits(first, "cat") | !inherits(second, "cat"))
stop("you haven't given me two cats!")
if(first$weight < second$weight) {
print("first cat is the fattest!")
return(first)
}
print("second cat is the fattest!")
return(second)
}
race(Rascal, Leo)
pop_plot <-function(x, a=30, b=1, c=10){
print(paste("The product of these numbers are:", a*exp((-b)*exp(-c)*t)))
}
pop_plot(12)
pop_plot <-function(x, a=30, b=1, c=10, t=12){
print(paste("The product of these numbers are:", a*exp((-b)*exp(-c)*t)))
}
pop_plot(12)
pop_plot (10,30,1,12)
plotgomp <- function(y0,r,maxt){
curve(
exp(log(y0)*exp(-r*x)),
from=0, to=maxt, xlab='Time',
ylab='Disease Incidence',
col='mediumblue'
)
}
plotgomp(1,2,3)
plotgomp <- function(y0,r,maxt){
curve(
exp(log(y0)*exp(-r*x)),
from=0, to=maxt, xlab='Time',
ylab='Population',
col='mediumblue'
)
}
plotgomp(4,6,12)
new.cat <- function(weight, breed){
output <- list(weight=weight, breed=breed)
class(output) <- "cat"
return(output)
}
Rascal <- list(length=40, weight=50, breed="Maine.Coone")
class(Rascal) <- "cat"
Leo <- list(length=20, weight=25, breed="Stray")
class(Leo) <- "cat"
class(Rascal)
class(Leo)
race <- function (first, second){
if(!inherits(first, "cat") | !inherits(second, "cat"))
stop("you haven't given me two cats!")
if(first$weight < second$weight) {
print("first cat is the fattest!")
return(first)
}
print("second cat is the fattest!")
return(second)
}
race(Rascal, Leo)
pop_plot (10,30,1,12)
pop_plot <-function(x, a=30, b=1, c=10, t=12){
plot(curve("The product of these numbers are:", a*exp((-b)*exp(-c)*t)))
}
pop_plot(12)
pop_growth=function(a, b, c, t){
for (i in tme){
t <-c(t,i)
pop <- a*exp((-b)*exp((-c)*t))
vector <-c(pop,vector)
}
plot(t, vector, xlab="Months", ylab="Population")
}
pop_growth(280,100,.4,30)
pop_growth=function(a, b, c, tmax){
for (i in tme){
t <-c(t,i)
pop <- a*exp((-b)*exp((-c)*t))
vector <-c(pop,vector)
}
plot(t, vector, xlab="Months", ylab="Population")
}
pop_growth(280,100,.4,30)
a=30
b=1
c=10
d=12
tme= c(1:d)
pop_growth=function(a, b, c, d){
for (i in tme){
t <-c(t,i)
pop <- a*exp((-b)*exp((-c)*t))
vector <-c(vector, pop)
}
plot(t, vector, xlab="Months", ylab="Population")
}
pop_growth(280,100,.4,30)
pop_growth=function(a, b, c, d){
t<-0
vector<-0
tme= c(1:d)
for (i in tme){
t<-c(t,i)
pop<- a*exp((-b)*exp((-c)*t))
vector<-c(vector, pop)
}
plot(t, vector, xlab="Months", ylab="Population")
}
pop_growth=function(a, b, c, d){
t<-0
vector<-0
tme= c(1:d)
for (i in tme){
t<-c(t,i)
pop<- a*exp((-b)*exp((-c)*i))
vector<-c(vector, pop)
}
plot(t, vector, xlab="Months", ylab="Population")
}
pop_growth(280,100,.4,30)
pop_growth=function(a, b, c, d){
t<-0
vector<-0
tme= c(1:d)
for (i in tme){
t<-c(t,i)
pop<- a*exp((-b)*exp((-c)*i))
vector<-c(vector, pop)
}
plot(t,y, xlab="Months", ylab="Population", col=ifelse(a<y, "blue", ifelse(y>b, "red", "black")))
}
pop_growth(280,100,.4,30)
pop_growth=function(a, b, c, d){
t<-0
vector<-0
tme= c(1:d)
for (i in tme){
t<-c(t,i)
pop<- a*exp((-b)*exp((-c)*i))
vector<-c(vector, pop)
}
plot(t,vector, xlab="Months", ylab="Population", col=ifelse(a<vector, "blue", ifelse(vector>b, "red", "black")))
}
pop_growth(280,100,.4,30)
pop_growth=function(a, b, c, d){
t<-0
vector<-0
tme= c(1:d)
for (i in tme){
t<-c(t,i)
pop<- a*exp((-b)*exp((-c)*i))
vector<-c(vector, pop)
}
plot(t,vector, xlab="Months", ylab="Population", col=ifelse(y>a & y>b, "purple")))
}
pop_growth=function(a, b, c, d){
t<-0
vector<-0
tme= c(1:d)
for (i in tme){
t<-c(t,i)
pop<- a*exp((-b)*exp((-c)*i))
vector<-c(vector, pop)
}
plot(t,vector, xlab="Months", ylab="Population", col=ifelse(y>a & y>b, "purple"))
}
pop_growth(280,100,.4,30)
pop_growth=function(a, b, c, d){
t<-0
vector<-0
tme= c(1:d)
for (i in tme){
t<-c(t,i)
pop<- a*exp((-b)*exp((-c)*i))
vector<-c(vector, pop)
}
plot(t,vector, xlab="Months", ylab="Population", col=ifelse(vector>a & vector>b, "purple"))
}
pop_growth(280,100,.4,30)
pop_growth=function(a, b, c, d){
t<-0
vector<-0
tme= c(1:d)
for (i in tme){
t<-c(t,i)
pop<- a*exp((-b)*exp((-c)*i))
vector<-c(vector, pop)
}
plot(t,vector, xlab="Months", ylab="Population", col=ifelse(vector>a & vector>b, "purple","black"))
}
pop_growth(280,100,.4,30)
pop_growth=function(a, b, c, d){
t<-0
vector<-0
tme= c(1:d)
for (i in tme){
t<-c(t,i)
pop<- a*exp((-b)*exp((-c)*i))
vector<-c(vector, pop)
}
plot(t,vector, xlab="Months", ylab="Population", col=ifelse(a<vector, "blue", ifelse(vector>b, "red", "black")))
}
pop_growth(280,100,.4,30)
pop_growth=function(a, b, c, d){
t<-0
vector<-0
tme= c(1:d)
for (i in tme){
t<-c(t,i)
pop<- a*exp((-b)*exp((-c)*i))
vector<-c(vector, pop)
}
plot(t,vector, xlab="Months", ylab="Population", col=ifelse(vector>a & vector>b, "purple","black"))
}
pop_growth(280,100,.4,30)
pop_growth(50,10,.4,30)
pop_growth=function(a, b, c, d){
t<-0
vector<-0
tme= c(1:d)
for (i in tme){
t<-c(t,i)
pop<- a*exp((-b)*exp((-c)*i))
vector<-c(vector, pop)
}
plot(t,vector, xlab="Months", ylab="Population", col=ifelse(vector>a & vector>b, "purple","black"))
}
pop_growth(5,1,.4,30)
pop_growth=function(a, b, c, d){
t<-0
vector<-0
tme= c(1:d)
for (i in tme){
t<-c(t,i)
pop<- a*exp((-b)*exp((-c)*i))
vector<-c(vector, pop)
}
plot(t,vector, xlab="Months", ylab="Population", col=ifelse(vector>a & vector>b, "purple","blue"))
}
pop_growth(5,1,.4,30)
pop_growth=function(a, b, c, d){
t<-0
vector<-0
tme= c(1:d)
for (i in tme){
t<-c(t,i)
pop<- a*exp((-b)*exp((-c)*i))
vector<-c(vector, pop)
}
plot(t,vector, xlab="Months", ylab="Population", col=ifelse(vector>a | vector>b, "purple","blue"))
}
pop_growth(5,1,.4,30)
race(Rascal, Leo)
race <- function (first, second){
if(!inherits(first, "cat") | !inherits(second, "cat"))
stop("you haven't given me two cats!")
if(first$weight > second$weight) {
print("first cat is the fattest!")
return(first)
}
print("second cat is the fattest!")
return(second)
}
race(Rascal, Leo)
